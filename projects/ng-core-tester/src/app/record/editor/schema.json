{
  "schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "title": "Test editor",
  "additionalProperties": false,
  "required": [
    "required"
  ],
  "propertiesOrder": [
    "notes",
    "oneOf",
    "optional",
    "required",
    "optional_hide_expression_field",
    "essential",
    "hidden",
    "defaultHidden",
    "enum",
    "object",
    "object_of_object",
    "array",
    "array_min_items",
    "array_of_objects",
    "array_of_array",
    "array_of_object_of_object",
    "hidden_with_default",
    "readonly_changeable",
    "hide_with_required_expression_control",
    "hide_with_required_expression",
    "hidden_sub_property_hide_expr",
    "array_of_objects_with_sub_objects",
    "treeSelect",
    "selectGroup",
    "selectWithSort",
    "selectGroupWithSort",
    "selectWithPreferredOptions",
    "selectMultiple",
    "selectMultipleWithGroup",
    "selectMultipleWithLabelTranslation",
    "markdown",
    "textarea",
    "email",
    "date_time",
    "date_only",
    "date_range",
    "password",
    "array_with_multicheckbox",
    "remoteAutoCompleteWithFilters",
    "remoteAutocompleteWithoutFilters",
    "input_with_default_value",
    "name_with_definition",
    "field_expressions",
    "field_with_addon_left_right",
    "field_radio_button_inline"
  ],
  "properties": {
    "notes": {
      "title": "Notes",
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "additionalProperties": false,
        "title": "Note",
        "propertiesOrder": [
          "type",
          "content"
        ],
        "required": [
          "type",
          "content"
        ],
        "properties": {
          "type": {
            "type": "string",
            "title": "Type",
            "enum": [
              "staff_note",
              "vendor_note"
            ],
            "default": "staff_note",
            "widget": {
              "formlyConfig": {
                "props": {
                  "options": [
                    {
                      "label": "vendor_note",
                      "value": "vendor_note"
                    },
                    {
                      "label": "staff_note",
                      "value": "staff_note"
                    }
                  ]
                }
              }
            }
          },
          "content": {
            "type": "string",
            "title": "Content",
            "maxLength": 2000,
            "minLength": 1,
            "widget": {
              "formlyConfig": {
                "type": "textarea",
                "props": {
                  "grids": 3
                }
              }
            }
          }
        }
      },
      "widget": {
        "formlyConfig": {
          "wrappers": [
            "card"
          ],
          "props": {
            "validation": {
              "validators": {
                "uniqueValueKeysInObject": {
                  "keys": [
                    "type"
                  ]
                }
              },
              "messages": {
                "uniqueValueKeysInObjectMessage": "Only one note per type is allowed"
              }
            },
            "hide": true,
            "navigation": {
              "essential": true
            }
          }
        }
      }
    },
    "$schema": {
      "title": "Schema",
      "type": "string",
      "minLength": 9,
      "default": "https://bib.rero.ch/schemas/demo/demo.json"
    },
    "pid": {
      "title": "Demo ID",
      "type": "string",
      "minLength": 1
    },
    "oneOf": {
      "title": "oneOf",
      "type": "object",
      "additionalProperties": "false",
      "oneOf": [
        {
          "title": "Property 1",
          "propertiesOrder": [
            "name",
            "type",
            "hidden"
          ],
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "title": "Name",
              "type": "string",
              "minLength": 3,
              "className": "lg:col-6"
            },
            "hidden": {
              "title": "Hidden name",
              "type": "string",
              "minLength": 3,
              "className": "lg:col-6",
              "widget": {
                "formlyConfig": {
                  "props": {
                    "hide": true,
                    "itemCssClass": "lg:col-6"
                  }
                }
              }
            },
            "type": {
              "title": "Type",
              "type": "string",
              "const": "type1",
              "default": "type1",
              "readOnly": true,
              "widget": {
                "formlyConfig": {
                  "wrappers": [
                    "hide"
                  ]
                }
              }
            }
          },
          "widget": {
            "formlyConfig": {
              "props": {
                "containerCssClass": "grid"
              }
            }
          }
        },
        {
          "title": "Property 2",
          "properties": {
            "name": {
              "title": "Name",
              "type": "string",
              "minLength": 3,
              "widget": {
                "formlyConfig": {
                  "props": {
                    "itemCssClass": "lg:col-6"
                  }
                }
              }
            },
            "type": {
              "title": "Type",
              "type": "string",
              "const": "type2",
              "default": "type2",
              "readOnly": true,
              "widget": {
                "formlyConfig": {
                  "props": {
                    "itemCssClass": "lg:col-6"
                  }
                }
              }
            },
            "bool": {
              "title": "boolean",
              "type": "boolean",
              "default": true,
              "widget": {
                "formlyConfig": {
                  "props": {
                    "itemCssClass": "lg:col-6"
                  }
                }
              }
            }
          },
          "widget": {
            "formlyConfig": {
              "props": {
                "containerCssClass": "grid"
              }
            }
          }
        }
      ],
      "widget": {
        "formlyConfig": {
          "props": {
            "cssClass": "p-2"
          }
        }
      }
    },
    "alwaysHidden": {
      "title": "Always hidden",
      "description": "Not present in the form, not present in the model.",
      "type": "string",
      "default": "default",
      "minLength": 3
    },
    "hidden": {
      "title": "Hidden",
      "type": "string",
      "minLength": 1,
      "widget": {
        "formlyConfig": {
          "props": {
            "hide": true,
            "navigation": {
              "essential": true
            }
          }
        }
      }
    },
    "defaultHidden": {
      "title": "Default hidden",
      "description": "Hidden field with a default value.",
      "type": "string",
      "default": "default value",
      "minLength": 3,
      "widget": {
        "formlyConfig": {
          "wrappers": [
            "hide"
          ]
        }
      }
    },
    "essential": {
      "title": "Essential",
      "type": "string",
      "minLength": 3,
      "widget": {
        "formlyConfig": {
          "props": {
            "hide": true,
            "navigation": {
              "essential": true
            }
          }
        }
      }
    },
    "optional": {
      "title": "Optional",
      "type": "string",
      "minLength": 3,
      "widget": {
        "formlyConfig": {
          "props": {
            "cssClass": "w-6"
          }
        }
      }
    },
    "required": {
      "title": "Required",
      "type": "string",
      "minLength": 3,
      "widget": {
        "formlyConfig": {
          "props": {
            "doNotSubmitOnEnter": true
          }
        }
      }
    },
    "optional_hide_expression_field": {
      "title": "Optional Field with Hide Expression",
      "type": "string",
      "minLength": 3,
      "widget": {
        "formlyConfig": {
          "expressions": {
            "hide": "!field.parent.model.required"
          },
          "props": {
            "doNotSubmitOnEnter": true
          }
        }
      }
    },
    "enum": {
      "title": "List of values",
      "type": "string",
      "minLength": 3,
      "default": "val1",
      "enum": [
        "val1",
        "val2",
        "val3"
      ],
      "widget": {
        "formlyConfig": {
          "props": {
            "options": [
              {
                "value": "val1",
                "label": "Value 1"
              },
              {
                "value": "val2",
                "label": "Value 2"
              },
              {
                "value": "val3",
                "label": "Value 3"
              }
            ]
          }
        }
      }
    },
    "object": {
      "title": "Object",
      "type": "object",
      "additionalProperties": false,
      "propertiesOrder": [
        "prop1",
        "prop2"
      ],
      "required": [
        "prop1"
      ],
      "properties": {
        "prop1": {
          "title": "Property 1",
          "type": "string",
          "minLength": 3,
          "widget": {
            "formlyConfig": {
              "props": {
                "itemCssClass": "md:col-6"
              }
            }
          }
        },
        "prop2": {
          "title": "Property 2",
          "type": "string",
          "minLength": 3,
          "widget": {
            "formlyConfig": {
              "props": {
                "itemCssClass": "md:col-6"
              }
            }
          }
        }
      },
      "widget": {
        "formlyConfig": {
          "props": {
            "containerCssClass": "grid",
            "hideLabel": true
          }
        }
      }
    },
    "object_of_object": {
      "title": "Object of object",
      "type": "object",
      "additionalProperties": false,
      "propertiesOrder": [
        "object1",
        "prop3"
      ],
      "properties": {
        "object1": {
          "title": "Object 1",
          "type": "object",
          "additionalProperties": false,
          "propertiesOrder": [
            "prop1",
            "prop2"
          ],
          "required": [
            "prop1"
          ],
          "properties": {
            "prop1": {
              "title": "Property 1",
              "type": "string",
              "minLength": 3
            },
            "prop2": {
              "title": "Property 2",
              "type": "string",
              "minLength": 3
            }
          }
        },
        "prop3": {
          "title": "Property 3",
          "type": "string",
          "minLength": 3
        }
      }
    },
    "array": {
      "title": "Array",
      "type": "array",
      "items": {
        "title": "Values",
        "type": "string",
        "minLength": 3,
        "widget": {
          "formlyConfig": {
            "props": {
              "itemCssClass": "lg:col-6"
            }
          }
        }
      },
      "widget": {
        "formlyConfig": {
          "props": {
            "containerCssClass": "grid"
          }
        }
      }
    },
    "array_min_items": {
      "title": "Array with a minimum of 2 items",
      "type": "array",
      "minItems": 2,
      "items": {
        "title": "Values",
        "type": "string",
        "minLength": 3,
        "widget": {
          "formlyConfig": {
            "props": {
              "itemCssClass": "lg:col-6"
            }
          }
        }
      },
      "widget": {
        "formlyConfig": {
          "props": {
            "containerCssClass": "grid"
          }
        }
      }
    },
    "array_of_objects": {
      "title": "Array of Objects",
      "type": "array",
      "minItems": 1,
      "items": {
        "title": "Properties",
        "type": "object",
        "additionalProperties": false,
        "propertiesOrder": [
          "prop1",
          "prop2"
        ],
        "required": [
          "prop1"
        ],
        "properties": {
          "prop1": {
            "title": "Property 1",
            "type": "string",
            "enum": [
              "value#1",
              "value#2"
            ],
            "minLength": 3,
            "widget": {
              "formlyConfig": {
                "props": {
                  "itemCssClass": "col-6"
                }
              }
            }
          },
          "prop2": {
            "title": "Property 2",
            "type": "string",
            "minLength": 3,
            "widget": {
              "formlyConfig": {
                "props": {
                  "hide": true,
                  "itemCssClass": "col-6"
                }
              }
            }
          }
        },
        "widget": {
          "formlyConfig": {
            "props": {
              "containerCssClass": "grid"
            }
          }
        }
      },
      "widget": {
        "formlyConfig": {
          "props": {
            "validation": {
              "validators": {
                "numberOfSpecificValuesInObject": {
                  "min": 1,
                  "max": 2,
                  "keys": {
                    "prop1": "value#1"
                  }
                }
              }
            }
          }
        }
      }
    },
    "array_of_array": {
      "title": "Array of array",
      "default": [
        [
          "value 1",
          "value 2"
        ],
        [
          "value 3"
        ]
      ],
      "type": "array",
      "minItems": 1,
      "items": {
        "title": "Array",
        "type": "array",
        "minItems": 1,
        "items": {
          "title": "Values",
          "type": "string",
          "minLength": 3
        }
      },
      "widget": {
        "formlyConfig": {
          "props": {
            "navigation": {
              "essential": true
            }
          }
        }
      }
    },
    "array_of_object_of_object": {
      "title": "Array of object of object",
      "type": "array",
      "minItems": 1,
      "items": {
        "title": "Object of object",
        "type": "object",
        "additionalProperties": false,
        "propertiesOrder": [
          "object1",
          "prop3"
        ],
        "properties": {
          "object1": {
            "title": "Object1",
            "type": "object",
            "additionalProperties": false,
            "propertiesOrder": [
              "prop1",
              "prop2"
            ],
            "required": [
              "prop1"
            ],
            "properties": {
              "prop1": {
                "title": "Property 1",
                "type": "string",
                "minLength": 3
              },
              "prop2": {
                "title": "Property 2",
                "type": "string",
                "minLength": 3
              }
            }
          },
          "prop3": {
            "title": "Property 3",
            "type": "string",
            "minLength": 3
          }
        }
      }
    },
    "hidden_with_default": {
      "title": "[issue] Hidden with default",
      "description": "Hidden field with a default value must not be added to the form.",
      "type": "string",
      "default": "Default hidden",
      "widget": {
        "formlyConfig": {
          "props": {
            "hide": true,
            "navigation": {
              "essential": true
            }
          }
        }
      }
    },
    "readonly_changeable": {
      "title": "[issue] Readonly value changeable",
      "description": "Readonly values must not be changeable.",
      "type": "string",
      "default": "Value 1",
      "readOnly": true,
      "enum": [
        "Value 1",
        "Value 2"
      ]
    },
    "hide_with_required_expression_control": {
      "title": "Hidden Property with required expression control",
      "type": "string",
      "minLength": 3,
      "default": "optional",
      "enum": [
        "optional",
        "required"
      ]
    },
    "hide_with_required_expression": {
      "title": "Hidden Property with required expression.",
      "description": "Hidden Property should be shown when it becomes required.",
      "type": "string",
      "minLength": 3,
      "widget": {
        "formlyConfig": {
          "props": {
            "hide": true
          },
          "expressions": {
            "props.required": "field.parent.model.hide_with_required_expression_control === 'required'"
          }
        }
      }
    },
    "hidden_sub_property_hide_expr": {
      "title": "Hidden sub-property with hide expression.",
      "description": "Hidden sub-property with hide expression can be added to the form.",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "statement"
      ],
      "properties": {
        "statement": {
          "title": "Statements",
          "type": "array",
          "minItems": 1,
          "items": {
            "title": "Statement",
            "type": "string",
            "minLength": 3
          }
        },
        "prop": {
          "title": "Hidden Property",
          "type": "string",
          "minLength": 3,
          "widget": {
            "formlyConfig": {
              "props": {
                "hide": true
              },
              "expressions": {
                "props.required": "field.parent.parent.model.hide_with_required_expression_control === 'required'"
              }
            }
          }
        }
      },
      "propertiesOrder": [
        "statement",
        "prop"
      ]
    },
    "array_of_objects_with_sub_objects": {
      "title": "Array of objects containing sub-objects",
      "description": "Array of objects containing sub-objects, which label is not displayed",
      "type": "array",
      "minItems": 1,
      "items": {
        "title": "Object",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "prop1": {
            "title": "Property 1",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "subprop1": {
                "title": "Sub property 1",
                "type": "string",
                "minLength": 3
              }
            },
            "required": [
              "subprop1"
            ]
          },
          "prop2": {
            "title": "Property 2",
            "type": "string",
            "minLength": 3
          }
        },
        "required": [
          "prop1",
          "prop2"
        ]
      }
    },
    "treeSelect": {
      "title": "Select with option tree",
      "type": "string",
      "enum": [
        "value1",
        "value2",
        "value3"
      ],
      "widget": {
        "formlyConfig": {
          "type": "tree-select",
          "props": {
            "options": [
              {
                "label": "Node 1",
                "data": "node1"
              },
              {
                "label": "Node 2",
                "selectable": false,
                "children": [
                  {
                    "label": "Node 3",
                    "data": "node3"
                  },
                  {
                    "label": "Node 4",
                    "selectable": false,
                    "children": [
                      {
                        "label": "Node 5",
                        "data": "node5"
                      },
                      {
                        "label": "Node 6",
                        "data": "node6"
                      }
                    ]
                  }
                ]
              },
              {
                "label": "Node 7",
                "data": "node7"
              }
            ]
          }
        }
      }
    },
    "selectGroup": {
      "title": "Select with group",
      "type": "string",
      "enum": [
        "value1",
        "value2",
        "value3"
      ],
      "widget": {
        "formlyConfig": {
          "props": {
            "group": true,
            "options": [
              {
                "label": "Default",
                "items": [
                  {
                    "label": "Value 1",
                    "value": "value1"
                  }
                ]
              },
              {
                "label": "Test",
                "items": [
                  {
                    "label": "Value 3",
                    "value": "value3"
                  },
                  {
                    "label": "Value 2",
                    "value": "value2"
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "selectWithSort": {
      "title": "Select with sort",
      "type": "string",
      "enum": [
        "baobab",
        "cypress",
        "epicea",
        "larch",
        "tree"
      ],
      "widget": {
        "formlyConfig": {
          "props": {
            "sort": true,
            "sortOrder": "asc",
            "options": [
              {
                "label": "Tree",
                "value": "tree"
              },
              {
                "label": "Baobab",
                "value": "baobab"
              },
              {
                "label": "Cypress",
                "value": "cypress"
              },
              {
                "label": "Epicea",
                "value": "epicea"
              },
              {
                "label": "Larch",
                "value": "larch"
              }
            ]
          }
        }
      }
    },
    "selectWithPreferredOptions": {
      "title": "Select with preferred options",
      "type": "string",
      "enum": [
        "fre",
        "ita",
        "eng",
        "por",
        "jpn"
      ],
      "widget": {
        "formlyConfig": {
          "props": {
            "sort": true,
            "options": [
              {
                "label": "Czech",
                "value": "cze"
              },
              {
                "label": "French",
                "value": "fre",
                "preferred": true
              },
              {
                "label": "Italian",
                "value": "ita",
                "preferred": true
              },
              {
                "label": "English",
                "value": "eng",
                "preferred": true
              },
              {
                "label": "Portuguese",
                "value": "por"
              },
              {
                "label": "Japanese",
                "value": "jpn"
              }
            ]
          }
        }
      }
    },
    "selectGroupWithSort": {
      "title": "Select with group and sort",
      "type": "string",
      "enum": [
        "epicea",
        "baobab",
        "foxglove",
        "crocus",
        "heather",
        "daffodil"
      ],
      "widget": {
        "formlyConfig": {
          "props": {
            "group": true,
            "sort": true,
            "options": [
              {
                "label": "Tree",
                "items": [
                  {
                    "label": "Epicea",
                    "value": "epicea"
                  },
                  {
                    "label": "Baobab",
                    "value": "baobab"
                  }
                ]
              },
              {
                "label": "Flower",
                "items": [
                  {
                    "label": "Foxglove",
                    "value": "foxglove"
                  },
                  {
                    "label": "Crocus",
                    "value": "crocus"
                  },
                  {
                    "label": "Heather",
                    "value": "heather"
                  },
                  {
                    "label": "Daffodil",
                    "value": "daffodil"
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "selectMultiple": {
      "title": "Select Multiple",
      "type": "array",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "type": "string",
        "enum": [
          "value1",
          "value2",
          "value3"
        ]
      },
      "widget": {
        "formlyConfig": {
          "type": "multi-select",
          "props": {
            "sort": true,
            "options": [
              {
                "label": "Value 2",
                "value": "value2"
              },
              {
                "label": "Value 1",
                "value": "value1"
              },
              {
                "label": "Value 3",
                "value": "value3"
              }
            ]
          }
        }
      }
    },
    "selectMultipleWithGroup": {
      "title": "Select Multiple with group",
      "type": "array",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "type": "string",
        "enum": [
          "epicea",
          "baobab",
          "foxglove",
          "crocus",
          "heather",
          "daffodil"
        ]
      },
      "widget": {
        "formlyConfig": {
          "type": "multi-select",
          "props": {
            "group": true,
            "sort": true,
            "options": [
              {
                "label": "Tree",
                "items": [
                  {
                    "label": "Epicea",
                    "value": "epicea"
                  },
                  {
                    "label": "Baobab",
                    "value": "baobab"
                  }
                ]
              },
              {
                "label": "Flower",
                "items": [
                  {
                    "label": "Foxglove",
                    "value": "foxglove"
                  },
                  {
                    "label": "Crocus",
                    "value": "crocus"
                  },
                  {
                    "label": "Heather",
                    "value": "heather"
                  },
                  {
                    "label": "Daffodil",
                    "value": "daffodil"
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "selectMultipleWithLabelTranslation": {
      "title": "Multiple select with label translation",
      "type": "array",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "type": "string",
        "enum": [
          "library",
          "german",
          "createdYear",
          "location"
        ]
      },
      "widget": {
        "formlyConfig": {
          "type": "multi-select",
          "props": {
            "options": [
              {
                "label": "library",
                "value": "library"
              },
              {
                "label": "created year",
                "value": "createdYear"
              },
              {
                "label": "German",
                "value": "german"
              },
              {
                "label": "location",
                "value": "location"
              }
            ]
          }
        }
      }
    },
    "markdown": {
      "title": "Markdown",
      "type": "string",
      "minLength": 1,
      "default": "Hello **world**",
      "widget": {
        "formlyConfig": {
          "type": "markdown",
          "props": {
            "minHeight": "300px"
          }
        }
      }
    },
    "textarea": {
      "title": "Textarea",
      "type": "string",
      "widget": {
        "formlyConfig": {
          "type": "textarea",
          "props": {
            "placeholder": "Type your text here",
            "displayChars": true,
            "displayWords": true,
            "limitChars": 200,
            "limitWords": 10,
            "grids": 5
          }
        }
      }
    },
    "email": {
      "title": "Email",
      "type": "string",
      "minLength": 1,
      "widget": {
        "formlyConfig": {
          "props": {
            "type": "email"
          }
        }
      }
    },
    "date_time": {
      "title": "Date Time picker",
      "type": "string",
      "format": "datetime-local",
      "pattern": "^[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01]) [012][0-9]:[0-5][0-9]$",
      "widget": {
        "formlyConfig": {
          "type": "dateTimePicker",
          "props": {
            "dataType": "string",
            "styleClass": "w-full",
            "showTime": true,
            "validation": {
              "messages": {
                "patternMessage": "Should be in the following format: 2022-12-31 13:01 (YYYY-MM-DD hh:mm)."
              }
            }
          }
        }
      }
    },
    "date_only": {
      "title": "Date picker",
      "type": "string",
      "format": "date",
      "pattern": "^[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
      "widget": {
        "formlyConfig": {
          "type": "datePicker",
          "props": {
            "placement": "top",
            "validation": {
              "messages": {
                "patternMessage": "Should be in the following format: 2022-12-31 (YYYY-MM-DD)."
              }
            },
            "disabledDates": [
              "2024-08-10",
              "2024-08-12"
            ]
          }
        }
      }
    },
    "date_range": {
      "title": "Date picker range",
      "type": "string",
      "widget": {
        "formlyConfig": {
          "type": "datePicker",
          "props": {
            "selectionMode": "range",
            "numberOfMonths": 2,
            "showButtonBar": true
          }
        }
      }
    },
    "password": {
      "title": "Password",
      "type": "string",
      "minLength": 20,
      "widget": {
        "formlyConfig": {
          "type": "passwordGenerator",
          "props": {
            "enabledEditMode": true,
            "styleClass": "surface-100"
          }
        }
      }
    },
    "array_with_multicheckbox": {
      "title": "Array with multiple checkbox",
      "type": "multicheckbox",
      "minItems": 1,
      "default": [
        "checkbox2",
        "checkbox3"
      ],
      "items": {
        "type": "string",
        "enum": [
          "checkbox1",
          "checkbox2",
          "checkbox3",
          "checkbox4"
        ]
      },
      "widget": {
        "formlyConfig": {
          "type": "multi-checkbox",
          "props": {
            "style": "inline",
            "options": [
              {
                "label": "Checkbox 1",
                "value": "checkbox1",
                "disabled": true
              },
              {
                "label": "Checkbox 2",
                "value": "checkbox2"
              },
              {
                "label": "Checkbox 3",
                "value": "checkbox3"
              },
              {
                "label": "Checkbox 4",
                "value": "checkbox4"
              }
            ]
          }
        }
      }
    },
    "remoteAutoCompleteWithFilters": {
      "title": "Remote Autocomplete with filters",
      "type": "string",
      "widget": {
        "formlyConfig": {
          "type": "remoteAutoComplete",
          "props": {
            "group": true,
            "scrollHeight": "300px",
            "queryOptions": {
              "type": "documents",
              "maxOfResult": 10
            },
            "filters": {
              "selected": "value2",
              "options": [
                {
                  "label": "Value 1",
                  "value": "value1"
                },
                {
                  "label": "Value 2",
                  "value": "value2"
                },
                {
                  "label": "Value 3",
                  "value": "value3"
                }
              ]
            }
          }
        }
      }
    },

    "remoteAutocompleteWithoutFilters": {
      "title": "Remote Autocomplete without filters",
      "type": "string",
      "widget": {
        "formlyConfig": {
          "type": "remoteAutoComplete",
          "props": {
            "group": true,
            "scrollHeight": "300px",
            "queryOptions": {
              "type": "documents",
              "maxOfResult": 10
            }
          }
        }
      }
    },
    "input_with_default_value": {
      "title": "Input with default value (jsonschema: defaultValueExpression)",
      "type": "string",
      "description": "Calculates a default value for the field",
      "minLength": 1,
      "widget": {
        "formlyConfig": {
          "props": {
            "defaultValueExpression": "(Math.random() + 1).toString(36).substring(2)"
          }
        }
      }
    },
    "name_with_definition": {
      "title":"With definition reference",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "title": "Name",
          "$ref": "#/definitions/name_definition"
        }
      }
    },
    "field_expressions": {
      "title": "Fields with expressions",
      "type": "array",
      "minItems": 1,
      "items": {
        "title": "Field with expressions",
        "type": "object",
        "additionalProperties": false,
        "propertiesOrder": [
          "type",
          "source"
        ],
        "properties": {
          "type": {
            "title": "Type",
            "type": "string",
            "enum": [
              "type1",
              "type2",
              "type3"
            ],
            "default": "type1",
            "widget": {
              "formlyConfig": {
                "props": {
                  "options": [
                    {
                      "label": "Type 1",
                      "value": "type1"
                    },
                    {
                      "label": "Type 2",
                      "value": "type2"
                    },
                    {
                      "label": "Type 3",
                      "value": "type3"
                    }
                  ]
                }
              }
            }
          },
          "source": {
            "title": "Source",
            "type": "string",
            "minLength": 1,
            "widget": {
              "formlyConfig": {
                "expressions": {
                  "hide": "field.parent?.model?.type !== 'type1'"
                }
              }
            }
          }
        }
      }
    },
    "field_with_addon_left_right": {
      "title": "Field with addon left and right",
      "type": "integer",
      "minimum": 0,
      "widget": {
        "formlyConfig": {
          "props": {
            "addonRight": [
              "day(s)",
              "<i class=\"pi pi-user\"></i>"
            ],
            "addonLeft": [
              "<i class=\"pi pi-user\"></i>"
            ]
          }
        }
      }
    },
    "field_hide_toc": {
      "title": "Hide field",
      "type": "string",
      "widget": {
        "formlyConfig": {
          "props": {
            "hide": true,
            "navigation": {
              "essential": true
            }
          }
        }
      }
    },
    "field_radio_button_inline": {
      "title": "Inline Radio button",
      "default": "radio_1",
      "widget": {
        "formlyConfig": {
          "type": "radioButton",
          "props": {
            "style": "inline",
            "options": [
              {
                "label": "Radio 1",
                "value": "radio_1"
              },
              {
                "label": "Radio 2",
                "value": "radio_2",
                "disabled": true
              },
              {
                "label": "Radio 3",
                "value": "radio_3"
              }
            ]
          }
        }
      }
    }
  },
  "definitions": {
    "name_definition": {
      "title": "Name (def)",
      "type": "string",
      "widget": {
        "formlyConfig": {
          "type": "textarea",
          "props": {
            "grids": 5
          }
        }
      }
    }
  }
}
